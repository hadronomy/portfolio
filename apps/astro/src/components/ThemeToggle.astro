---
import { Icon } from 'astro-icon/components';
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'button'> {}

const { class: className, ...props } = Astro.props;
---

<button class:list={['flex relative theme-toggle-button', className]} {...props}>
  <Icon name="ph:moon-fill" class="h-4 w-4 scale-0 dark:scale-100 hidden dark:block" />
  <Icon name="ph:sun-fill" class="h-4 w-4 scale-100 dark:scale-0 dark:hidden" />
</button>

<script>
  const toggleTheme = () => {
    const isDark = document.documentElement.classList.contains('dark');
    document.documentElement.classList[isDark ? 'remove' : 'add']('dark');
    localStorage.setItem('theme', isDark ? 'light' : 'dark');
  };

  const initTheme = () => {
    const theme = localStorage.getItem('theme') ?? 'dark';
    document.documentElement.classList.toggle('dark', theme === 'dark');
  };

  document.addEventListener('astro:page-load', () => {
    initTheme();
    const buttons = document.querySelectorAll<HTMLButtonElement>('button.theme-toggle-button');
    buttons.forEach((button) => button.addEventListener('click', toggleTheme));
  });
</script>
