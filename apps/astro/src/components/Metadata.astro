---
// Import the global.css file here so that it is included on
// all pages through the use of the <Metadata /> component.
import '@fontsource/bellota';
import '@fontsource-variable/onest';
import '@fontsource/monaspace-neon';
import '~/styles/global.css';
import '~/styles/twoslash.css';

import { getImage } from 'astro:assets';
import { ViewTransitions } from 'astro:transitions';
import favicon from '../favicon.png';

interface Props {
  title: string;
  description: string;
  image?: string;
  publishedTime?: string;
  type?: 'website' | 'article';
}

const appleTouchIcon = await getImage({
  src: favicon,
  width: 460,
  height: 460,
  format: 'png',
});

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description,
  publishedTime,
  image = '/blog-placeholder-1.jpg',
  type = 'website',
} = Astro.props;
---

<!-- Hello There! --><!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" href="/favicon.ico" type="image/x-icon" sizes="16x16 32x32" />
<link rel="apple-touch-icon" href={appleTouchIcon.src} />
<link
  rel="alternate"
  type="application/rss+xml"
  title="Blog"
  href={new URL('rss.xml', Astro.site)}
/>
{publishedTime && <meta property="article:published_time" content={publishedTime} />}
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };
  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
  }
</script>

<script>
  function handleImageLoad() {
    const images = document.querySelectorAll<HTMLImageElement>('img[data-transition-name]');
    images.forEach((img) => {
      img.style.opacity = '0';
      img.onload = () => {
        img.style.opacity = '1';
      };
      if (img.complete) {
        img.onload(new Event('load'));
      }
    });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', handleImageLoad);
  } else {
    handleImageLoad();
  }
</script>

<ViewTransitions />
