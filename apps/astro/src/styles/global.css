@import 'tailwindcss';
@import 'fumadocs-ui/css/neutral.css';
@import 'fumadocs-ui/css/preset.css';

@config '../../tailwind.config.ts';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 47.4% 11.2%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 47.4% 11.2%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 100% 50%;
    --destructive-foreground: 210 40% 98%;

    --selection: 233, 12%, 39%;

    --ring: 215 20.2% 65.1%;

    --radius: 0.5rem;
    
    --font-sans: 'Onest Variable', sans-serif;
    --font-mono: 'Monaspace Neon', monospace;

    --halftone: rgba(198, 198, 198, 0.26);
  }

  @media not print {
    .dark {
      --background-image: url('/noise.png');
      --background: 220 17% 7%;
      --foreground: 213 31% 91%;

      --muted: 223 0% 11%;
      --muted-foreground: 215.4 0% 56.9%;

      --popover: 224 0% 4%;
      --popover-foreground: 215 0% 65.1%;

      --card: 0 100% 0%;
      --card-foreground: 213 0% 91%;

      --border: 216 0% 17%;
      --input: 216 0% 17%;

      --primary: 210 0% 98%;
      --primary-foreground: 222.2 0% 1.2%;

      --secondary: 222.2 0% 11.2%;
      --secondary-foreground: 210 0% 98%;

      --accent: 216 0% 17%;
      --accent-foreground: 210 0% 98%;

      --destructive: 0 63% 31%;
      --destructive-foreground: 210 40% 98%;

      --selection: 233, 12%, 39%;

      --ring: 216 0% 17%;

      --radius: 0.5rem;
      
      --halftone: rgba(15, 16, 18, 0.700);
    }
  }
}

@layer base {
  * {
    @apply border-border;
    min-width: 0;
    font-feature-settings:
      'calt' 1,
      'liga' 1,
      'ss01' 1,
      'ss09' 1;
  }

  body {
    @apply bg-background text-foreground;
    font-feature-settings:
      'rlig' 1,
      'calt' 1;
    position: relative;
  }

  input,
  textarea,
  button,
  select,
  a {
    -webkit-tap-highlight-color: transparent;
  }

  /* Print */
  @media print {
    div,
    code,
    pre {
      page-break-inside: avoid;
    }
  }

  /* Scrollbar */

  /* width */
  ::-webkit-scrollbar {
    @apply h-1 w-1;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    @apply rounded bg-muted;
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    @apply rounded bg-muted-foreground;
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555;
  }

  pre code {
    @apply grid! text-[16px]! font-[500]! font-mono!;
    font-variant-ligatures: additional-ligatures !important;
  }

  code:not(pre code):not(pre * code) {
    @apply rounded-lg! border-2! px-1! py-1! pt-2! bg-muted! text-foreground/100!;
  }

  figure {
    @apply my-2!;
  }

  /* KBD */
  kbd:has(kbd) {
    @apply inline-flex flex-wrap items-center gap-x-1 text-sm;
  }

  kbd > kbd {
    @apply min-h-[30px] inline-flex justify-center items-center py-1 px-1.5 bg-muted border border-muted-foreground font-mono text-sm text-foreground rounded-md shadow-[0px_4px_0px_0px_rgba(0,0,0,0.5)] dark:shadow-[0px_4px_0px_0px_rgba(255,255,255,0.5)];
  }

  article {
    @apply break-words;
  }

  /* Line Numbers */

  code[data-line-numbers] {
    counter-reset: line;
  }
   
  code[data-line-numbers] > [data-line]::before {
    counter-increment: line;
    content: counter(line);
   
    /* Other styling */
    display: inline-block;
    width: 0.75rem;
    margin-right: 2rem;
    text-align: right;
    color: var(--muted-foreground);
    opacity: 40%;
  }
   
  code[data-line-numbers-max-digits="2"] > [data-line]::before {
    width: 1.25rem;
  }
   
  code[data-line-numbers-max-digits="3"] > [data-line]::before {
    width: 1.75rem;
  }
   
  code[data-line-numbers-max-digits="4"] > [data-line]::before {
    width: 2.25rem;
  }

  /* Halftone */

  .bg-halftone {
    --bg-size: 0.3rem;
    --bg-position: calc(var(--bgSize) / 2);
    --stop1: 3%;
    --stop2: 65%;
  }

  .bg-halftone::before {
    content: '';
    position: absolute;
    inset: 0;

    background-color: transparent;
    background-image: 
      radial-gradient(circle at center, transparent var(--stop1), var(--halftone) var(--stop2)),
      radial-gradient(circle at center, transparent var(--stop1), var(--halftone) var(--stop2));
    background-position: 0 0, var(--bg-position) var(--bg-position);
    background-repeat: round;
    background-size: var(--bg-size) var(--bg-size);
    backdrop-filter: blur(3px);
    mask: linear-gradient(rgb(0, 0, 0) 40%, rgba(0, 0, 0, 0) 100%);
  }
}
